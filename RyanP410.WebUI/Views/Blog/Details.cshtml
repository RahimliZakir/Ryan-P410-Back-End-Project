@model BlogUserSideViewModel

@{
    ViewData["Title"] = "Blog Details";
}

<div class="card-inner blog blog-post animated active" id="blog-card">
    <div class="card-wrap">

        <!--
            Blog Single
        -->
        <div class="content blog-single">

            <!-- title -->
            <div class="title"><span class="first-word">Blog</span> Post</div>

            <!-- content -->
            <div class="row border-line-v">
                <div class="col col-m-12 col-t-12 col-d-12">
                    <div class="post-box">

                        <!-- blog detail -->
                        <h1 class="h-title">@Model.BlogDto.Title</h1>
                        <div class="blog-detail">
                            <span class="date">@Model.BlogDto.Collections.FirstOrDefault()?.CreatedDate.ToString("MMMM dd, yyyy")</span>
                            <span class="cat-links">
                                @foreach (var item in Model.BlogDto.Collections)
                                {
                                    <a href="#">@item.BlogCategory.Name</a>
                                }
                            </span>
                            <span class="byline"> by <span class="author"><a href="#">@Model.BlogDto.Author</a></span></span>
                        </div>

                        <!-- blog image -->
                        <div class="blog-image">
                            <img src="@Model.BlogDto.ImagePath" alt="">
                        </div>

                        <!-- blog content -->
                        <div class="blog-content">
                            <p>
                                @Html.Raw(Model.BlogDto.Description)
                            </p>
                        </div>

                        <div class="post-text-bottom">
                            <span class="tags-links">
                                Tags:
                                @foreach (var item in Model.BlogDto.Collections)
                                {
                                    <a href="#">@item.Tag.Name</a>
                                }
                            </span>
                        </div>

                    </div>
                </div>
            </div>

            <nav class="navigation post-navigation">
                <div class="nav-links">
                    @if (Model.PrevBlog != null)
                    {
                        <div class="nav-previous"><a asp-action="Details" asp-route-id="@Model.PrevBlog.Id"><span class="post-nav-next post-nav-text">Prev</span></a></div>
                    }
                    @if (Model.NextBlog != null)
                    {
                        <div class="nav-next"><a asp-action="Details" asp-route-id="@Model.NextBlog.Id"><span class="post-nav-prev post-nav-text">Next</span></a></div>
                    }
                </div>
            </nav>

            <div class="post-comments">
                <div class="title">
                    <div class="title_inner">@Model.BlogDto.CommentCount Comments</div>
                </div>
                <div class="row border-line-v comments-row">
                    <div class="col col-m-12 col-t-12 col-d-12">
                        <ul class="comments">
                            @foreach (Comment comment in Model.BlogDto.Comments.Where(c => c.ParentId == null))
                            {
                                <li identifier="@comment.Id" class="comment post-comment">
                                    <div class="comment">
                                        <div class="comment-image image">
                                            <img src="@(!string.IsNullOrWhiteSpace(comment.User.ImagePath) ? $"/uploads/users/{@comment.User.ImagePath}" : "/uploads/users/default-non-user-no-photo-1.jpg")" class="avatar" height="80" width="80" alt="">
                                        </div>
                                        <div class="comment-desc desc">
                                            <div class="comment-name name">
                                                <span class="comment-author">@comment.User.Name @comment.User.Surname</span>
                                                <span class="comment-time">@comment.CreatedDate.ToString("H:mm tt", CultureInfo.InvariantCulture)</span>
                                                <span class="comment-date">@comment.CreatedDate.ToString("MMMM dd, yyyy")</span>
                                                <span class="comment-reply">
                                                    <a class="comment-reply-link" style="cursor: pointer;" data-comment-id="@comment.Id" onclick="setReply(event)">Reply</a>
                                                </span>
                                            </div>
                                            <div class="comment-text">
                                                <p>@comment.Content</p>
                                            </div>
                                        </div>
                                    </div>
                                    <ul class="children">
                                        @foreach (Comment child in comment.GetChildComments())
                                        {
                                            <li identifier="@child.Id" class="comment post-comment">
                                                <div class="comment">
                                                    <div class="comment-image image">
                                                        <img src="@(!string.IsNullOrWhiteSpace(child.User?.ImagePath) ? $"/uploads/users/{@child.User?.ImagePath}" : "/uploads/users/default-non-user-no-photo-1.jpg")" class="avatar" height="80" width="80" alt="">
                                                    </div>
                                                    <div class="comment-desc desc">
                                                        <div class="comment-name name">
                                                            <span class="comment-author">@child.User?.Name @child.User?.Surname</span>
                                                            <span class="comment-time">@child.CreatedDate.ToString("H:mm tt", CultureInfo.InvariantCulture)</span>
                                                            <span class="comment-date">@child.CreatedDate.ToString("MMMM dd, yyyy")</span>
                                                            <span class="comment-reply">
                                                                <a class="comment-reply-link" style="cursor: pointer;" data-comment-id="@child.Id" onclick="setReply(event)">Reply</a>
                                                            </span>
                                                        </div>
                                                        <div class="comment-text">
                                                            <p>@child.Content</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            </li>
                                        }
                                    </ul>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>

            <div class="post-comments">
                <div class="title"><span class="first-word">Leave</span> a Comment</div>
                <div class="row border-line-v">
                    <div class="col col-m-12 col-t-12 col-d-12">
                        <div class="post-box">
                            <form id="comment-form" method="post">
                                <input type="hidden" asp-for="BlogDto.Id" name="BlogId" />
                                <input type="hidden" name="ParentId" value="2" />
                                <div class="row">
                                    <div class="col col-d-12 col-t-12 col-m-12">
                                        <div class="group-val">
                                            <textarea name="Content" placeholder="Your Message"></textarea>
                                        </div>
                                    </div>
                                </div>
                                <div class="align-left">
                                    @if (User.Identity.IsAuthenticated)
                                    {
                                        <button class="button" type="submit">
                                            <span class="text">Add Comment</span>
                                            <span class="arrow"></span>
                                        </button>
                                    }
                                    else
                                    {
                                        <a class="button" asp-action="SignIn" asp-controller="Account" asp-route-returnUrl="@Context.Request.Path.ToString()">
                                            <span class="text">Add Comment</span>
                                            <span class="arrow"></span>
                                        </a>
                                    }
                                </div>
                            </form>
                            <div class="alert-success">
                                <p>Thanks, your message is sent successfully.</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>

    </div>
</div>

@section js{
<script>
    $(function(){
      let lis = $('.top-menu li');

      $(lis).removeClass('active');
      $(lis).eq(3).addClass('active');

      let form = $('#comment-form');

      $(form).on('submit', (e) => {
         e.preventDefault();

         let formData = new FormData(e.currentTarget);

         $.ajax({
           url: '@Url.Action("PostComment")',
           type: "POST",
           processData: false,
           contentType: false,
           data: formData,
           dataType: 'html',
           success: function(response, status, xhr){
               let parentId = xhr.getResponseHeader('commentParentId');

               if(parentId != null) {
                   console.log(parentId)
                   $(`[identifier="${parentId}"] > .children`).append(response);
               }
               else {
                 $('.comments').append(response);
               }

               e.currentTarget.reset();
               $('#comment-form div.comment').remove();
           },
           error: function(response){
               console.log(response);
           }
         });
      });
    });

    function setReply(ev){
        ev.preventDefault();
        ev.stopPropagation();

        const parentId = $(ev.currentTarget).data('comment-id');

        $('#comment-form input[name="ParentId"]').val(parentId);

        $('#comment-form div.post-comment').remove();
        const comment = $(ev.currentTarget).closest('.post-comment').clone(true);

        $(comment).find('.comment-reply > a').remove();
        let trashBtn = $("<span class='trash-btn' style='color: red;cursor: pointer;'><i class='far fa-trash-alt'></i></span>");
        $(trashBtn).click(() => {
          $(comment).remove();
        });
        $(comment).find('.comment-reply').append(trashBtn);

        $(comment).insertBefore($('#comment-form').children()[0]);
    }
</script>
}